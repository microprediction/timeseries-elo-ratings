# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: timeseries-elo-rating-fast-only

on:
  schedule:
    - cron:  '22 * * * *'

defaults:
  run:
    working-directory: ./

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install wheel
            pip install microprediction
            pip install timemachines
            pip install neuralprophet
            
      - name: update elo ratings and test skaters
        run: |
          python update_skater_elo_ratings.py
          
      - name: update html leaderboards
        run: | 
          python create_leaderboards.py
   
      - name: Show git status
        run: | 
          git status
          
      - name: Add regression_test_results files
        run: |
          git config --local user.name  ${{ github.actor }}
          git config --local user.email "my@email.com"
          git add --all           
      - name: Show git status
        run: | 
          git status
          
      - name: Commit
        run: |  
          git commit -a -m "commiting test results"
          
      - name: git pull I
        run: | 
          git pull
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

on:
  release:
    types: [created]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
